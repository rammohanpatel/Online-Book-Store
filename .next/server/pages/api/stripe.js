"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/stripe";
exports.ids = ["pages/api/stripe"];
exports.modules = {

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("stripe");;

/***/ }),

/***/ "(api)/./pages/api/stripe.js":
/*!*****************************!*\
  !*** ./pages/api/stripe.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"stripe\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([stripe__WEBPACK_IMPORTED_MODULE_0__]);\nstripe__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst stripe = new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"sk_test_51NTRc7SDTiGuu0nG56qJyb6r5XLF6QKxcuPbBepBm5Tc2ttO4TspURbwOf8k9TFVpdLi6AEpNgN8FGyqR4A0AXMe009v4lonnI\");\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        // console.log(req.body.cartItems);\n        try {\n            const params = {\n                submit_type: \"pay\",\n                mode: \"payment\",\n                payment_method_types: [\n                    \"card\"\n                ],\n                billing_address_collection: \"auto\",\n                shipping_options: [\n                    {\n                        shipping_rate: \"shr_1NTdv6SDTiGuu0nGwaQSfC8T\"\n                    }\n                ],\n                line_items: req.body.map((item)=>{\n                    const img = item.image[0].asset._ref;\n                    const newImage = img.replace(\"image-\", \"https://cdn.sanity.io/images/wqpzghk2/production/\").replace(\"-webp\", \".webp\");\n                    return {\n                        price_data: {\n                            currency: \"inr\",\n                            product_data: {\n                                name: item.name,\n                                images: [\n                                    newImage\n                                ]\n                            },\n                            unit_amount: item.price * 100\n                        },\n                        adjustable_quantity: {\n                            enabled: true,\n                            minimum: 1\n                        },\n                        quantity: item.quantity\n                    };\n                }),\n                success_url: `${req.headers.origin}/success`,\n                cancel_url: `${req.headers.origin}/`\n            };\n            // Create Checkout Sessions from body params.\n            const session = await stripe.checkout.sessions.create(params);\n            res.status(200).json(session);\n        } catch (err) {\n            res.status(err.statusCode || 500).json(err.message);\n        }\n    } else {\n        res.setHeader(\"Allow\", \"POST\");\n        res.status(405).end(\"Method Not Allowed\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3RyaXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRCO0FBRTVCLE1BQU1DLFNBQVMsSUFBSUQsOENBQU1BLENBQUNFLDZHQUF5QztBQUVwRCxlQUFlRyxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDNUMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsbUNBQW1DO1FBQ25DLElBQUk7WUFDQSxNQUFNQyxTQUFRO2dCQUNWQyxhQUFZO2dCQUNaQyxNQUFLO2dCQUNMQyxzQkFBcUI7b0JBQUM7aUJBQU87Z0JBQzdCQyw0QkFBMkI7Z0JBQzNCQyxrQkFBaUI7b0JBQ2I7d0JBQUNDLGVBQWM7b0JBQThCO2lCQUNoRDtnQkFDREMsWUFBV1YsSUFBSVcsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQ0M7b0JBQ3JCLE1BQU1DLE1BQU1ELEtBQUtFLEtBQUssQ0FBQyxFQUFFLENBQUNDLEtBQUssQ0FBQ0MsSUFBSTtvQkFDcEMsTUFBTUMsV0FBV0osSUFBSUssT0FBTyxDQUFDLFVBQVMscURBQXFEQSxPQUFPLENBQUMsU0FBUTtvQkFFM0csT0FBTTt3QkFDRkMsWUFBVzs0QkFDUEMsVUFBUzs0QkFDVEMsY0FBYTtnQ0FDVEMsTUFBS1YsS0FBS1UsSUFBSTtnQ0FDZEMsUUFBTztvQ0FBQ047aUNBQVM7NEJBQ3JCOzRCQUNBTyxhQUFZWixLQUFLYSxLQUFLLEdBQUM7d0JBQzNCO3dCQUNBQyxxQkFBb0I7NEJBQ2hCQyxTQUFROzRCQUNSQyxTQUFTO3dCQUNiO3dCQUNBQyxVQUFTakIsS0FBS2lCLFFBQVE7b0JBQzFCO2dCQUNKO2dCQUVBQyxhQUFhLENBQUMsRUFBRS9CLElBQUlnQyxPQUFPLENBQUNDLE1BQU0sQ0FBQyxRQUFRLENBQUM7Z0JBQzVDQyxZQUFZLENBQUMsRUFBRWxDLElBQUlnQyxPQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDdEM7WUFHSiw2Q0FBNkM7WUFDN0MsTUFBTUUsVUFBVSxNQUFNeEMsT0FBT3lDLFFBQVEsQ0FBQ0MsUUFBUSxDQUFDQyxNQUFNLENBQUNuQztZQUN0REYsSUFBSXNDLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNMO1FBQ3ZCLEVBQUUsT0FBT00sS0FBSztZQUNaeEMsSUFBSXNDLE1BQU0sQ0FBQ0UsSUFBSUMsVUFBVSxJQUFJLEtBQUtGLElBQUksQ0FBQ0MsSUFBSUUsT0FBTztRQUNwRDtJQUNGLE9BQU87UUFDTDFDLElBQUkyQyxTQUFTLENBQUMsU0FBUztRQUN2QjNDLElBQUlzQyxNQUFNLENBQUMsS0FBS00sR0FBRyxDQUFDO0lBQ3RCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1zYW5pdHktbmV4dGpzLXN0YXJ0ZXIvLi9wYWdlcy9hcGkvc3RyaXBlLmpzP2Q3ODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmlwZSBmcm9tICdzdHJpcGUnO1xyXG5cclxuY29uc3Qgc3RyaXBlID0gbmV3IFN0cmlwZShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVFJJUEVfU0VDUkVUX0tFWSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgLy8gY29uc29sZS5sb2cocmVxLmJvZHkuY2FydEl0ZW1zKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGFyYW1zID17XHJcbiAgICAgICAgICAgIHN1Ym1pdF90eXBlOidwYXknLFxyXG4gICAgICAgICAgICBtb2RlOidwYXltZW50JyxcclxuICAgICAgICAgICAgcGF5bWVudF9tZXRob2RfdHlwZXM6WydjYXJkJ10sXHJcbiAgICAgICAgICAgIGJpbGxpbmdfYWRkcmVzc19jb2xsZWN0aW9uOidhdXRvJyxcclxuICAgICAgICAgICAgc2hpcHBpbmdfb3B0aW9uczpbXHJcbiAgICAgICAgICAgICAgICB7c2hpcHBpbmdfcmF0ZTonc2hyXzFOVGR2NlNEVGlHdXUwbkd3YVFTZkM4VCd9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIGxpbmVfaXRlbXM6cmVxLmJvZHkubWFwKChpdGVtKT0+e1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW1nID0gaXRlbS5pbWFnZVswXS5hc3NldC5fcmVmO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3SW1hZ2UgPSBpbWcucmVwbGFjZSgnaW1hZ2UtJywnaHR0cHM6Ly9jZG4uc2FuaXR5LmlvL2ltYWdlcy93cXB6Z2hrMi9wcm9kdWN0aW9uLycpLnJlcGxhY2UoJy13ZWJwJywnLndlYnAnKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICByZXR1cm57XHJcbiAgICAgICAgICAgICAgICAgICAgcHJpY2VfZGF0YTp7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5OidpbnInLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X2RhdGE6e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTppdGVtLm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZXM6W25ld0ltYWdlXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdW5pdF9hbW91bnQ6aXRlbS5wcmljZSoxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBhZGp1c3RhYmxlX3F1YW50aXR5OntcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDp0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtIDoxLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6aXRlbS5xdWFudGl0eVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHN1Y2Nlc3NfdXJsOiBgJHtyZXEuaGVhZGVycy5vcmlnaW59L3N1Y2Nlc3NgLFxyXG4gICAgICAgICAgICBjYW5jZWxfdXJsOiBgJHtyZXEuaGVhZGVycy5vcmlnaW59L2AsXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgIFxyXG4gICAgICAvLyBDcmVhdGUgQ2hlY2tvdXQgU2Vzc2lvbnMgZnJvbSBib2R5IHBhcmFtcy5cclxuICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IHN0cmlwZS5jaGVja291dC5zZXNzaW9ucy5jcmVhdGUocGFyYW1zKTtcclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oc2Vzc2lvbik7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgcmVzLnN0YXR1cyhlcnIuc3RhdHVzQ29kZSB8fCA1MDApLmpzb24oZXJyLm1lc3NhZ2UpO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsICdQT1NUJyk7XHJcbiAgICByZXMuc3RhdHVzKDQwNSkuZW5kKCdNZXRob2QgTm90IEFsbG93ZWQnKTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiU3RyaXBlIiwic3RyaXBlIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NUUklQRV9TRUNSRVRfS0VZIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInBhcmFtcyIsInN1Ym1pdF90eXBlIiwibW9kZSIsInBheW1lbnRfbWV0aG9kX3R5cGVzIiwiYmlsbGluZ19hZGRyZXNzX2NvbGxlY3Rpb24iLCJzaGlwcGluZ19vcHRpb25zIiwic2hpcHBpbmdfcmF0ZSIsImxpbmVfaXRlbXMiLCJib2R5IiwibWFwIiwiaXRlbSIsImltZyIsImltYWdlIiwiYXNzZXQiLCJfcmVmIiwibmV3SW1hZ2UiLCJyZXBsYWNlIiwicHJpY2VfZGF0YSIsImN1cnJlbmN5IiwicHJvZHVjdF9kYXRhIiwibmFtZSIsImltYWdlcyIsInVuaXRfYW1vdW50IiwicHJpY2UiLCJhZGp1c3RhYmxlX3F1YW50aXR5IiwiZW5hYmxlZCIsIm1pbmltdW0iLCJxdWFudGl0eSIsInN1Y2Nlc3NfdXJsIiwiaGVhZGVycyIsIm9yaWdpbiIsImNhbmNlbF91cmwiLCJzZXNzaW9uIiwiY2hlY2tvdXQiLCJzZXNzaW9ucyIsImNyZWF0ZSIsInN0YXR1cyIsImpzb24iLCJlcnIiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/stripe.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/stripe.js"));
module.exports = __webpack_exports__;

})();